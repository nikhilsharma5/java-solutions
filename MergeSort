public class MergeSort {
  public static void main( String[] args ) {
    Integer[] array = {4,2,5,1,3,6,7,1};
    mergesort( array, new Integer[array.length], 0, array.length - 1 );
}

private static void mergesort( Integer[] array, Integer[] temp, int leftStart, int rightEnd ) {
    if ( leftStart >= rightEnd ) {
        return;
    }
    int middle = (leftStart + rightEnd) / 2;
    mergesort( array, temp, leftStart, middle );
    mergesort( array, temp, middle + 1, rightEnd );
    mergeHalves( array, temp, leftStart, rightEnd );
    System.out.println( Arrays.asList(array ));
}

private static void mergeHalves( Integer[] array, Integer[] tmp, int leftStart, int rightEnd ) {
    int leftEnd = (leftStart + rightEnd) / 2;
    int rightStart = leftEnd + 1;
    int size = rightEnd - leftStart + 1;

    int l = leftStart;
    int r = rightStart;
    int index = leftStart;

    while ( l <= leftEnd && r <= rightEnd ) {
        if ( array[l] <= array[r] ) {
            tmp[index] = array[l];
            l++;
        } else {
            tmp[index] = array[r];
            r++;
        }
        index++;
    }
    System.arraycopy( array, l, tmp, index, leftEnd - l + 1 );
    System.arraycopy( array, r, tmp, index, rightEnd - r + 1 );
    System.arraycopy( tmp, leftStart, array, leftStart, size );
}

}
