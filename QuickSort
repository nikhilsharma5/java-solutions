public class QuickSort(){
  public static void main( String[] args ) {
    Integer[] array = {1, 3, 5, 4, 2, 1, 6, 3, 6, 1, 3, 5, 4, 2, 1, 5, 8, 6, 3, 6, 1, 3, 5, 3, 4, 2, 1, 6, 3, 6, 2};
    sort( array, 0, array.length - 1 );
}

private static void sort( Integer[] array, int left, int right ) {
    if ( left >= right ) {
        return;
    }
    int pivot = array[(left + right) / 2];
    System.out.println( "pivot position : " + (left + right) / 2 );
    System.out.println( "pivot: " + pivot );
    int index = partition( array, left, right, pivot );
    System.out.println( Arrays.asList( array ) );
    sort( array, left, index - 1 );
    sort( array, index, right );
}

private static int partition( Integer[] array, int left, int right, int pivot ) {
    while ( left <= right ) {
        while ( array[left] < pivot ) {
            left++;
        }
        while ( array[right] > pivot ) {
            right--;
        }
        if ( left <= right ) {
            if ( !array[left].equals( array[right] ) )
                swap( array, left, right );
            left++;
            right--;
        }
    }
    return left;
}

private static void swap( Integer[] array, int left, int right ) {
    System.out.println( "swapping at: " + left + " at: " + right );
    System.out.println( "swapping " + array[left] + " " + array[right] );
    int tmp = array[right];
    array[right] = array[left];
    array[left] = tmp;
}
}
